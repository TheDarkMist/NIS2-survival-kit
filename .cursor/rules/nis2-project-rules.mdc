---
description: Main project rules for NIS2 Survival Kit - a documentation toolkit for WordPress micro-businesses
globs: ["**/*"]
alwaysApply: true
---

# NIS2 Survival Kit - Project Rules

## Project Overview
This is a NIS2-Ready Documentation Toolkit for WordPress micro-businesses and freelancers. It provides a structured framework for creating and maintaining NIS2-compliant documentation organized around the 13 ENISA security measures.

## Core Principles
- **Clarity over complexity** – minimal technical barriers for micro-business users
- **AI-assisted workflow** – designed to work seamlessly with AI tools
- **Audit-friendly structure** – follows ENISA Technical Implementation Guidance
- **Source-based accuracy** – all content must align with `/reference/` materials

## File Structure Rules

### Critical Files
- `/00_context/index.md` - Master index, single source of truth for all documents
- `/00_context/prompt_update_index.md` - AI prompt for safely updating the index
- Each `/docs/{nn}_*/` folder corresponds to one ENISA security measure

### Document Organization
- **Never change** existing folder structure or core filenames
- Each ENISA area folder contains: policies, procedures, templates, and AI prompts
- Keep all documentation in Markdown format
- Store evidence under `/99_evidence/` (if created)

## Naming Conventions

### Document IDs (MANDATORY)
Format: `NIS2-<ENISA#>-<TYPE>-<slug>`
- Example: `NIS2-03-PBK-incident-playbook`
- Types: `POL` (policy), `PROC` (procedure), `SOP` (operating procedure), `PLAN`, `PBK` (playbook), `CHK` (checklist), `TMP` (template), `REG` (register), `WG` (work guideline)

### Versioning
- Format: `MAJOR.MINOR` (e.g., `1.3`)
- Increase MAJOR if meaning changes, otherwise MINOR

### Dates
- Always use ISO format: `YYYY-MM-DD`

### Evidence Files
- Format: `YYYYMMDD_<evidence-type>_<system>_<ref>.<ext>`
- Example: `20250810_backup_report_wp01_JB123.pdf`

## Index Management Rules

### When Working with `/00_context/index.md`
- **ALWAYS** follow the detailed rules in `/00_context/prompt_update_index.md`
- **NEVER** alter the table header structure
- **NEVER** change existing Doc IDs
- Only append new rows or update existing content
- Maintain all columns: Doc ID, Title, File path, Type, Status, Owner, Version, Last updated, Next review, NIS2 mapping, ENISA measure, Risk covered, Evidence link
- Use status: Draft, In review, Completed, or Retired

### Status Definitions
- **Draft** – content in progress
- **In review** – awaiting approval  
- **Completed** – signed off and in force
- **Retired** – superseded/obsolete (keep for audit history)

## Content Creation Guidelines

### Language and Tone
- Default language: English (unless user specifies otherwise)
- Professional but accessible tone for micro-business users
- Avoid technical jargon when possible

### Document Structure
- Use clear Markdown formatting
- Include proper headings hierarchy
- Add relevant metadata at document start
- Reference official guidance from `/reference/` folder

### Compliance Requirements
- All documents must align with NIS2 requirements
- Reference specific Articles/Annexes where applicable
- Map to corresponding ENISA security measures
- Include risk coverage information

## AI Assistant Workflow

### Before Making Changes
1. Read `/00_context/index.md` to understand current documentation state
2. **ALWAYS** consult `/00_context/prompt_update_index.md` for index update rules
3. Consult relevant `/reference/` materials for official guidance
4. Focus on the specific `/docs/{area}/` folder for the task

### When Creating/Updating Documents
1. Use appropriate templates when available
2. Follow all naming conventions strictly
3. Maintain document metadata
4. Update the master index after changes
5. Propose updated index snippets ready to paste

### Quality Assurance
- Ensure all created content is immediately usable
- Verify compliance with NIS2 and ENISA guidelines
- Maintain consistency with existing documentation style
- Test that all internal links work correctly

## Review and Maintenance

### Review Cadence
- Default: every 6 months from last update
- Trigger review after significant changes (new hosting, security incidents, major plugin changes, new client data classes)

### Change Management
- Update version numbers appropriately
- Document major changes in index change log
- Maintain audit trail for compliance purposes

## Restrictions
- Do not create documentation files unless explicitly requested
- Do not modify the core repository structure
- Do not create `/99_evidence/` folder unless evidence needs to be stored
- Always preserve existing document IDs and folder organization